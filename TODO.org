* Maybe switch to C99 (to allow inline). (or maybe not!)
* Allow the user to define its own Panic() function.
* Be compatible with C++ user tasks.
* TODO Add a license and define a file header to add to each file for public distribution.
** Like that :
   #+BEGIN_SRC C
   /*
    * This file is part of the Lazuli project.
    *
    * This file is in the public domain, as well as all files of this project.
    *
    * Authors:
    *      Remi Andruccioli (2017)
    * 
    */
   #+END_SRC
* TODO Insert a raw string in the final binary to keep track of the kernel and version.
** Something like "Lazuli 1.42.63 ", with delimiters, or fixed size.
** This information (kernel name, version number(s)) might be accessible to the code.
** Pick a version numbering model.
* Get a real Makefile, or build system, or whatever.
* Reference resources
** Providing links and documentation over the Internet.
* Add a README file.
** [[https://youtu.be/PC05prd2usY]]
* TODO Add a description to the GitHub repository.
* Write documentation about header files organization.
* For context saving: Allow the user to define a task with no context saving.
* TODO Write doc about progmem.
* Add a CONTRIBUTING file and update README.md about that.
** [[https://help.github.com/articles/setting-guidelines-for-repository-contributors/]]
* Provide a way to perform unit tests onto the target machine.
* Prefix Lazuli structs in userspace with "Lz_"
* Find a logo
* DONE Eliminate #if in assert.h
  CLOSED: [2018-02-13 Tue 00:32]
** DONE Introduce an if() with debug constant symbol.
   CLOSED: [2018-02-13 Tue 00:33]
* Move assert.h in user API
